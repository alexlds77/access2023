>>> generate overlay mapping:
REF -> DSI [0]  [0, 5, 0, 0, 0] [5, 5, 1, 0, 1]
DSI -> DSC [0]  [5, 5, 1, 0, 1] [10, 5, 2, 0, 2]
DSC -> MS1 [0]* [10, 5, 2, 0, 2] [20, 5, 7, 0, 4]
MS1 -> REF [a]
REF -> DSI [1]  [10, 5, 0, 1, 2] [15, 5, 1, 1, 3]
DSI -> NFC [1]  [15, 5, 1, 1, 3] [20, 5, 3, 1, 4]
NFC -> MS2 [1]* [20, 5, 3, 1, 4] [25, 5, 8, 1, 5]
MS2 -> MS1 [b]
MS1 -> MS4 [0]* [20, 5, 7, 0, 4] [25, 5, 10, 0, 5]
MS4 -> MS2 [c]
MS2 -> MS5 [1]* [25, 5, 8, 1, 5] [30, 5, 11, 1, 6]
MS5 -> MS4 [d]
MS4 -> DSO [0]  [25, 5, 10, 0, 5] [30, 5, 14, 0, 6]
DSO -> MS5 [e]
MS5 -> DSO [1]  [30, 5, 11, 1, 6] [35, 5, 14, 1, 7]
DSO -> DSO [f]
DSO -> REF [0]  [30, 5, 14, 0, 6] [35, 0, 0, 0, 7]
DSO -> REF [1]  [35, 5, 14, 1, 7] [40, 0, 0, 1, 8]
overlap idx: []
there is no overlap!

>>> apply the serializer filter
>>> apply the pruning filter

>>> generate overlay mapping:
REF -> DSI [0]  [0, 5, 0, 0, 0] [5, 5, 1, 0, 1]
DSI -> DSC [0]  [5, 5, 1, 0, 1] [10, 5, 2, 0, 2]
DSC -> MS1 [0]* [10, 5, 2, 0, 2] [20, 5, 7, 0, 4]
MS1 -> REF [a]
REF -> DSI [1]  [10, 5, 0, 1, 2] [15, 5, 1, 1, 3]
DSI -> NFC [1]  [15, 5, 1, 1, 3] [20, 5, 3, 1, 4]
NFC -> MS2 [1]* [20, 5, 3, 1, 4] [25, 5, 8, 1, 5]
MS2 -> MS1 [b]
MS1 -> MS4 [0]* [20, 5, 7, 0, 4] [25, 5, 10, 0, 5]
MS4 -> MS2 [c]
MS2 -> MS5 [1]* [25, 5, 8, 1, 5] [30, 5, 11, 1, 6]
MS5 -> MS4 [d]
MS4 -> DSO [0]  [25, 5, 10, 0, 5] [30, 5, 14, 0, 6]
DSO -> MS5 [e]
MS5 -> DSO [1]  [30, 5, 11, 1, 6] [35, 5, 14, 1, 7]
DSO -> DSO [f]
DSO -> REF [0]  [30, 5, 14, 0, 6] [35, 0, 0, 0, 7]
DSO -> REF [1]  [35, 5, 14, 1, 7] [40, 0, 0, 1, 8]
overlap idx: []
there is no overlap!

Optimal Schedule Length: 40
18.703369140625
[0, 5, 0, 0, 0]
[5, 5, 1, 0, 1]
[10, 5, 2, 0, 2]
[10, 5, 0, 1, 2]
[15, 5, 1, 1, 3]
[20, 5, 3, 1, 4]
[20, 5, 7, 0, 4]
[25, 5, 8, 1, 5]
[25, 5, 10, 0, 5]
[30, 5, 11, 1, 6]
[30, 5, 14, 0, 6]
[35, 0, 0, 0, 7]
[35, 5, 14, 1, 7]
[40, 0, 0, 1, 8]

